AngularJS是一个 JavaScript框架,是以一个JavaScript文件形式发布的，可通过<script>标签添加到html页面
         通过指令扩展HTML，通过表达式绑定数据到HTML。
	《是以ng作为前缀的HTML属性》

1.引入（使用）:<script src="http://cdn.static.runoob.com/libs/angular.js/1.4.6/angular.min.js"></script>
！！！我们建议把脚本放在 <body> 元素的底部。
      这会提高网页加载速度，因为HTML加载不受制于脚本加载。
2.扩展html:
AngularJS 通过 ng-directives扩展了HTML。
	       ng-app 指令定义一个 AngularJS 应用程序。
	       ng-model 指令把元素值（比如输入域的值）绑定到应用程序。
	       ng-bind 指令把应用程序数据绑定到 HTML 视图。
3.AngularJS的作用
  把应用程序数据绑定到 HTML 元素。
  克隆和重复HTML元素。
  隐藏和显示HTML元素。
  在HTML元素"背后"添加代码。
  支持输入验证。  
4.HTML5允许扩展的（自制的）属性，以 data- 开头。
  AngularJS 属性以 ng- 开头，但是您可以使用 data-ng- 来让网页对HTML5有效。
5.AngularJS表达式
  表达式写在双大括号内：{{ expression }}。
  表达式把数据绑定到HTML，这与 ng-bind 指令有异曲同工之妙。
  将在表达式书写的位置"输出"数据。
  表达式 很像 JavaScript 表达式：它们可以包含文字、运算符和变量。eg: {{ 5 + 5 }} 或 {{ firstName + " " + lastName }}
6.模块（Module） 定义了 AngularJS 应用。
  控制器（Controller） 用于控制 AngularJS 应用。
  ng-app指令定义了应用, ng-controller 定义了控制器。
  <script>
    var app = angular.module('myApp', []);
      app.controller('myCtrl', function($scope) {
      $scope.firstName= "John";
      $scope.lastName= "Doe";
    });
  </script> 
7.可以使用 .directive 函数来添加自定义的指令。
8.scope作用域：应用于html和control之间的纽带。
  你在 AngularJS 创建控制器时，你可以将 $scope 对象当作一个参数传递。
  所有的应用都有一个$rootScope,它可以作用在ng-app指令包含额所html元素中。
  $rootScope 可作用于整个应用中。是各个controller中scope的桥梁。用rootscope定义的值，可以在各个controller中使用。
9.控制器：一般控制器都是另作一个文件来引用的,即xx.js文件
  eg:引用：<script src = "xx.js"></script>

10.过滤器
   过滤器可以通过一个管道字符（|）和一个过滤器添加到表达式中。
   eg:{{变量|过滤器}}
11.AngularJS中，服务是一个函数或对象，可使用。
   如：$location服务，它可以返回当前页面的URL地址。
   注意$location 服务是作为一个参数传递到 controller 中。如果要使用它，需要在 controller 中定义。
       $http是AngularJS应用中最常用的服务，服务向服务器发送请求，应用响应服务器传送过来的数据。
       $tomeout
   自定义服务：app.service('hexafy', function()
         {
    	   this.myFunc = function (x) 
            {
              return x.toString(16);
             }
         });
   自定义过滤器：app.filter('myFormat',['hexafy', function(hexafy) 
                 {
                      return function(x) 
                    {
                      return hexafy.myFunc(x);
                     };
                  }]);



























   所有的应用都有一个$rootScope作为参数传递，